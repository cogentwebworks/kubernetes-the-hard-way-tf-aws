---
- hosts: worker
  remote_user: ubuntu
  tasks:

  - name: 09.1 Update the repository cache and install socat, conntrack and ipset
    apt:
      pkg:
        - socat
        - conntrack
        - ipset
      update_cache: yes
    become: yes

  - name: 09.2 Create directories
    file:
      path: "{{item}}"
      state: directory
    become: yes
    with_items: 
      - "/etc/cni/net.d"
      - "/opt/cni/bin"
      - "/var/lib/kubelet"
      - "/var/lib/kube-proxy"
      - "/var/lib/kubernetes"
      - "/var/run/kubernetes"
      - "/etc/containerd"

  - name: 09.3 Download files
    get_url:
      url: "{{ item }}"
      dest: /usr/local/bin/
      mode: a+x
    with_items:
      - "https://storage.googleapis.com/gvisor/releases/release/latest/runsc"
      - "https://github.com/opencontainers/runc/releases/download/v1.0.0-rc90/runc.amd64"
      - "https://storage.googleapis.com/kubernetes-release/release/v1.18.5/bin/linux/amd64/kubectl"
      - "https://storage.googleapis.com/kubernetes-release/release/v1.18.5/bin/linux/amd64/kube-proxy"
      - "https://storage.googleapis.com/kubernetes-release/release/v1.18.5/bin/linux/amd64/kubelet"
    become: yes

  - name: 09.4 Rename runc.amd64 to runc
    shell: cp /usr/local/bin/runc.amd64 /usr/local/bin/runc
    become: yes

  - name: 09.5 Download and untar crictl
    unarchive:
      src: "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.18.0/crictl-v1.18.0-linux-amd64.tar.gz"
      dest: /usr/local/bin/
      remote_src: yes
    become: yes
  
  - name: 09.6 Download and untar containerd
    unarchive:
      src: "https://github.com/containerd/containerd/releases/download/v1.3.5/containerd-1.3.5.linux-amd64.tar.gz"
      dest: /
      remote_src: yes
    become: yes

  - name: 09.7 Download and untar cni-plugins
    unarchive:
      src: "https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz"
      dest: /opt/cni/bin/
      remote_src: yes
    become: yes

# Configure Containerd

  - name: 09.8 Get Pod-Cidr
    shell: |
      curl -s http://169.254.169.254/latest/user-data/ | tr "|" "\n" | grep "^pod-cidr" | cut -d"=" -f2
    args:
      warn: false
    register: pod_cidr
  
  - name: 09.9 Create CNI bridge file
    template:
      src: "template_files/09_bridge_conf.template"
      dest: "/etc/cni/net.d/10-bridge.conf"
    become: yes

  - name: 09.10 Create CNI loopback service file
    template:
      src: "template_files/09_loopback_conf.template"
      dest: "/etc/cni/net.d/99-loopback.conf"
    become: yes
  
  - name: 09.11 Create containerd config file
    template:
      src: "template_files/09_containerd_config.template"
      dest: "/etc/containerd/config.toml"
    become: yes

  - name: 09.12 Create containerd service file
    template:
      src: "template_files/09_containerd_service.template"
      dest: "/etc/systemd/system/containerd.service"
    become: yes

# Configure Kubelet

  - name: 09.13 Get DNS-name
    shell: |
      hostname
    args:
      warn: false
    register: private_dns
  
  - name: 09.14 Copy Kubelet cert files
    shell: |
      cp {{ private_dns.stdout }}-key.pem {{ private_dns.stdout }}.pem /var/lib/kubelet/
      cp {{ private_dns.stdout }}.kubeconfig /var/lib/kubelet/kubeconfig
      cp ca.pem /var/lib/kubernetes/
    args:
      warn: false
    become: yes

  - name: 09.15 Create kubelet config yaml file
    template:
      src: "template_files/09_kubelet_config_yaml.template"
      dest: "/var/lib/kubelet/kubelet-config.yaml"
    become: yes

  - name: 09.16 Create kubelet service file
    template:
      src: "template_files/09_kubelet_service.template"
      dest: "/etc/systemd/system/kubelet.service"
    become: yes  

# Configure Kubernetes Proxy 

  - name: 09.17 Move kube proxy kubeconfig
    shell: cp /home/ubuntu/kube-proxy.kubeconfig /var/lib/kube-proxy/kubeconfig
    become: yes

  - name: 09.18 Create kube proxy config yaml file
    template:
      src: "template_files/09_kube_proxy_config_yaml.template"
      dest: "/var/lib/kube-proxy/kube-proxy-config.yaml"
    become: yes

  - name: 09.19 Create kube proxy service file
    template:
      src: "template_files/09_kube_proxy_service.template"
      dest: "/etc/systemd/system/kube-proxy.service"
    become: yes

  - name: 09.20 Start the Worker Services
    shell: |
      systemctl daemon-reload 
      systemctl enable containerd kubelet kube-proxy
      systemctl stop containerd kubelet kube-proxy
      systemctl start containerd kubelet kube-proxy
    become: yes