---
- hosts: controller
  remote_user: ubuntu
  tasks:

    - name: 08.1 Creates directory /etc/kubernetes/config
      file:
        path: /etc/kubernetes/config
        state: directory
      become: yes
    
    - name: 08.2 Download kube-apiserver
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kube-apiserver
        dest: /usr/local/bin/
        mode: a+x
      become: yes

    - name: 08.3 Download kube-controller-manager
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kube-controller-manager
        dest: /usr/local/bin/
        mode: a+x
      become: yes
    
    - name: 08.4 Download kube-scheduler
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kube-scheduler
        dest: /usr/local/bin/
        mode: a+x
      become: yes

    - name: 08.5 Download kubectl
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl
        dest: /usr/local/bin/
        mode: a+x
      become: yes
    
    - name: 08.6 Creates directory /var/lib/kubernetes/
      file:
        path: /var/lib/kubernetes/
        state: directory
      become: yes
    
    - name: 08.7 Move certificates
      shell: cp ca.pem ca-key.pem kubernetes-key.pem kubernetes.pem service-account-key.pem service-account.pem encryption-config.yaml /var/lib/kubernetes/        
      args:
        chdir: /home/ubuntu/
      become: yes
    
    - name: 08.8 Create kube-apiserver service file
      template:
        src: "template_files/08_kube_apiserver.template"
        dest: "/etc/systemd/system/kube-apiserver.service"
      become: yes
    
    - name: 08.9 Move the 'kube-controller-manager' kubeconfig into place
      shell: cp kube-controller-manager.kubeconfig /var/lib/kubernetes/        
      args:
        chdir: /home/ubuntu/
      become: yes
    
    - name: 08.10 Create kube-controller-manager service file
      template:
        src: "template_files/08_kube_controller_manager.template"
        dest: "/etc/systemd/system/kube-controller-manager.service"
      become: yes
    
    - name: 08.11 Move the 'kube-scheduler' kubeconfig into place
      shell: cp kube-scheduler.kubeconfig /var/lib/kubernetes/       
      args:
        chdir: /home/ubuntu/
      become: yes
    
    - name: 08.12 Create kube-scheduler.yaml file
      template:
        src: "template_files/08_kube_scheduler_yaml.template"
        dest: "/etc/kubernetes/config/kube-scheduler.yaml"
      become: yes
    
    - name: 08.13 Create kube-scheduler service file
      template:
        src: "template_files/08_kube_scheduler_service.template"
        dest: "/etc/systemd/system/kube-scheduler.service"
      become: yes
    
    - name: 08.14 Enablei ip forwarding
      shell: sysctl -w net.ipv4.ip_forward=1
      become: yes

    - name: 08.14 Start the Controller Services
      shell: |
        systemctl daemon-reload 
        systemctl enable kube-apiserver kube-controller-manager kube-scheduler
        sudo systemctl stop kube-apiserver kube-controller-manager kube-scheduler
        sudo systemctl start kube-apiserver kube-controller-manager kube-scheduler
      become: yes
    
    - name: sleep for 60 seconds to start kubectl and continue with play
      wait_for:
        timeout: 60
      delegate_to: localhost

    - name: 8.15 Create ClusterRole to access Kubelet API 
      shell:
        cmd: |
          cat <<EOF | kubectl apply --kubeconfig admin.kubeconfig -f -
          apiVersion: rbac.authorization.k8s.io/v1beta1
          kind: ClusterRole
          metadata:
            annotations:
              rbac.authorization.kubernetes.io/autoupdate: "true"
            labels:
              kubernetes.io/bootstrapping: rbac-defaults
            name: system:kube-apiserver-to-kubelet
          rules:
            - apiGroups:
                - ""
              resources:
                - nodes/proxy
                - nodes/stats
                - nodes/log
                - nodes/spec
                - nodes/metrics
              verbs:
                - "*"
          EOF

    - name: 8.16 Bind ClusterRole to user kubernetes 
      shell:
        cmd: |
          cat <<EOF | kubectl apply --kubeconfig admin.kubeconfig -f -
          apiVersion: rbac.authorization.k8s.io/v1beta1
          kind: ClusterRoleBinding
          metadata:
            name: system:kube-apiserver
            namespace: ""
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: system:kube-apiserver-to-kubelet
          subjects:
            - apiGroup: rbac.authorization.k8s.io
              kind: User
              name: kubernetes
          EOF